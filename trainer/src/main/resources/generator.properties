builder.samples.sum_subtraction.natural.level_1 = default [var1]+-[var2]| var1 between 1;9 <> var2 between 1;9|none|interval=3 4|javascript integer
builder.samples.sum_subtraction.natural.level_2 = default [var1]+-[var2]| var1 between 10;99 <> var2 between 10;100|none|interval=3 4|javascript integer
builder.samples.sum_subtraction.natural.level_3 = default [var1]+-[var2]| var1 between 100;999 <> var2 between 100;999|none|interval=3 4|javascript integer
builder.samples.sum_subtraction.integer.level_1 = default [var1]+-[var2]| var1 between -9;9 <> var2 between -9;9|none|interval=3 4|javascript integer
builder.samples.sum_subtraction.integer.level_2 = default [var1]+-[var2]| var1 between -99;-10 and 10;99 <> var2 between -99;-10 and 10;99|none|interval=3 4|javascript integer
builder.samples.sum_subtraction.integer.level_3 = default [var1]+-[var2]+-[var3]| var1 between -999;-100 and 100;999 <> var2 between -999;-100 and 100;999 <> var3 between -999;-100 and 100;999|none|interval=3 4|javascript integer
builder.samples.multiply_division.natural.level_1 = default [var1]*/[var2]| var1 between 1;9 <> var2 between 1;9|integer|interval=3 4|javascript double
builder.samples.multiply_division.natural.level_2 = default [var1]*/[var2]| var1 between 1;9 <> var2 between 10;99 |integer|interval=3 4|javascript double
builder.samples.multiply_division.natural.level_3 = default [var1]*[var2]| var1 between 1;9 <> var2 between 10;99|pattern [answer]/[var2] [var1] <> integer|interval=3 4|javascript integer \
                                                 \\ default [var1]*/[var2]| var1 between 1;9 <> var2 between 10;99 |integer|interval=3 4|javascript double
builder.samples.multiply_division.integer.level_1 = default [var1]*/[var2]| var1 between 1;9 and -9;-1 <> var2 between 1;9 and -9;-1|integer|interval=3 4 <> negative=2|javascript double
builder.samples.multiply_division.integer.level_2 = default [var1]*/[var2]| var1 between 1;9 and -9;-1 <> var2 between 10;99 and -99;10|integer|interval=3 4 <> negative=2|javascript double
builder.samples.multiply_division.integer.level_3 = default [var1]*[var2]| var1 between -9;-1 and 1;9 <> var2 between -99;-10 and 10;99|pattern [answer]/[var2] [var1] <> integer|interval=3 4 <> negative=2|javascript integer \
                                               \\  default [var1]*/[var2]| var1 between 1;9 and -9;-1 <> var2 between 10;99 and -99;10|integer|interval=3 4 <> negative=2|javascript double
builder.samples.pow.level_1 = pow SAME_BASE | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|none\
                         \\ pow SAME_DEGREE | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|not equal var1 var3 \
                          \\ pow POW_IN_POW | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|none \
                     \\ pow NEGATIVE_DEGREE | var1 between  -100;-2 and 2;100 <> var2 between -100;-2|none
builder.samples.pow.level_2 = pow SAME_BASE_REVERT | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|none\
                         \\ pow SAME_DEGREE_REVERT | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|not equal var1 var3 \
                          \\ pow POW_IN_POW_REVERT | var1 between 2;100 <> var2 between -10;10 <> var3 between 2;100|none \
                     \\ pow NEGATIVE_DEGREE_REVERT | var1 between  -100;-2 and 2;100 <> var2 between 2;100|none
builder.samples.equation.level_1 = default [var1]*[var2] | var1 between -50;-1 and 1;50 <> var2 between -50;-1 and 1;50 | pattern [var2]x=[answer] [var1] <> integer| interval=3 4 <> negative=2 | javascript integer
builder.samples.equation.level_2 = default [var4]+[var1]| var1 between -50;-1 and 1;50 <> var2 between -50;-1 and 1;50 <> var3 between -50;-1 and 1;50 <> var4 == [var3]*[var2]| pattern [var3]x+[var1]=[answer] var2 <> integer | interval=3 4 <> negative=2 | javascript integer
builder.samples.inequality.level_1 = default [var1]*[var2] | var1 between -50;-1 and 1;50 <> var2 between -50;-1 and 1;50 <> var3 == Math.random()>0.5?"=":"" <> var4 == Math.random()>0.5?">":"<" <> var5 == [var1]>0?"[var4]"=="<"?"<":">":"[var4]"=="<"?">":"<"| pattern [answer]x[var5][var3][var2] [var5][var3][var1] <> integer | interval=3 4 <> negative=2 <> modify=4 (Math.random()>0.5?">":"<").concat(Math.random()>0.5?"=":"").concat([option]) | javascript integer
